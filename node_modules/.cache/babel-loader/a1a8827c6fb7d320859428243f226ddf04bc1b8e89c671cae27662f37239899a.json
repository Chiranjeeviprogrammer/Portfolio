{"ast":null,"code":"var _jsxFileName = \"/Users/gaadintech/Downloads/ios-dev-portfolio/src/YouTube.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTube = () => {\n  _s();\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [shorts, setShorts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pageToken, setPageToken] = useState(\"\");\n  const API_KEY = \"YOUR_YOUTUBE_API_KEY\"; // Replace with your actual API key\n  const CHANNEL_ID = \"UCSqX6nd5ITl3b9oFGpDPA\"; // Replace with your YouTube channel ID\n  const VIDEOS_PER_PAGE = 12;\n\n  // Fetch channel data (subscribers, video count, etc.)\n  useEffect(() => {\n    const fetchChannelData = async () => {\n      try {\n        const response = await axios.get(`https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics,contentDetails&id=${CHANNEL_ID}&key=${API_KEY}`);\n        const data = response.data.items[0];\n        setChannelData(data);\n      } catch (error) {\n        console.error(\"Error fetching channel data:\", error);\n      }\n    };\n    fetchChannelData();\n  }, []);\n\n  // Fetch videos (Normal Videos & Shorts)\n  useEffect(() => {\n    const fetchVideos = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${CHANNEL_ID}&maxResults=${VIDEOS_PER_PAGE}&order=date&type=video&videoCategoryId=0&pageToken=${pageToken}&key=${API_KEY}`);\n        const fetchedVideos = response.data.items;\n\n        // Filter Shorts (videos that are less than 60 seconds)\n        const filteredShorts = fetchedVideos.filter(video => video.snippet.title.toLowerCase().includes(\"shorts\"));\n        setVideos(fetchedVideos);\n        setShorts(filteredShorts);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      }\n      setLoading(false);\n    };\n    fetchVideos();\n  }, [pageToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"YouTube - @chiranjeevikumar1008\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), channelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: channelData.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Subscribers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.subscriberCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Total Videos: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.videoCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Total Views: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.viewCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold\",\n      children: \"Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          title: video.snippet.title,\n          className: \"w-full h-40 rounded-lg\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium\",\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mt-6\",\n      children: \"Shorts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), shorts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\",\n      children: shorts.map(short => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${short.id.videoId}`,\n          title: short.snippet.title,\n          className: \"w-full h-40 rounded-lg\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600\",\n          children: short.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, short.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No Shorts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTube, \"fStiR0gzk32O6BmugLUAxvuDcXc=\");\n_c = YouTube;\nexport default YouTube;\nvar _c;\n$RefreshReg$(_c, \"YouTube\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","YouTube","_s","channelData","setChannelData","videos","setVideos","shorts","setShorts","loading","setLoading","pageToken","setPageToken","API_KEY","CHANNEL_ID","VIDEOS_PER_PAGE","fetchChannelData","response","get","data","items","error","console","fetchVideos","fetchedVideos","filteredShorts","filter","video","snippet","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","statistics","subscriberCount","videoCount","viewCount","map","src","id","videoId","allowFullScreen","length","short","_c","$RefreshReg$"],"sources":["/Users/gaadintech/Downloads/ios-dev-portfolio/src/YouTube.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst YouTube = () => {\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [shorts, setShorts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pageToken, setPageToken] = useState(\"\");\n\n  const API_KEY = \"YOUR_YOUTUBE_API_KEY\"; // Replace with your actual API key\n  const CHANNEL_ID = \"UCSqX6nd5ITl3b9oFGpDPA\"; // Replace with your YouTube channel ID\n  const VIDEOS_PER_PAGE = 12;\n\n  // Fetch channel data (subscribers, video count, etc.)\n  useEffect(() => {\n    const fetchChannelData = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics,contentDetails&id=${CHANNEL_ID}&key=${API_KEY}`\n        );\n        const data = response.data.items[0];\n        setChannelData(data);\n      } catch (error) {\n        console.error(\"Error fetching channel data:\", error);\n      }\n    };\n    fetchChannelData();\n  }, []);\n\n  // Fetch videos (Normal Videos & Shorts)\n  useEffect(() => {\n    const fetchVideos = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `https://www.googleapis.com/youtube/v3/search?part=snippet&channelId=${CHANNEL_ID}&maxResults=${VIDEOS_PER_PAGE}&order=date&type=video&videoCategoryId=0&pageToken=${pageToken}&key=${API_KEY}`\n        );\n        const fetchedVideos = response.data.items;\n\n        // Filter Shorts (videos that are less than 60 seconds)\n        const filteredShorts = fetchedVideos.filter((video) => video.snippet.title.toLowerCase().includes(\"shorts\"));\n\n        setVideos(fetchedVideos);\n        setShorts(filteredShorts);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      }\n      setLoading(false);\n    };\n    fetchVideos();\n  }, [pageToken]);\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">YouTube - @chiranjeevikumar1008</h1>\n\n      {/* Channel Info */}\n      {channelData && (\n        <div className=\"bg-gray-100 p-6 rounded-lg shadow\">\n          <h2 className=\"text-2xl font-semibold\">{channelData.snippet.title}</h2>\n          <p className=\"text-gray-700\">\n            Subscribers: <span className=\"font-bold\">{channelData.statistics.subscriberCount}</span>\n          </p>\n          <p className=\"text-gray-700\">\n            Total Videos: <span className=\"font-bold\">{channelData.statistics.videoCount}</span>\n          </p>\n          <p className=\"text-gray-700\">\n            Total Views: <span className=\"font-bold\">{channelData.statistics.viewCount}</span>\n          </p>\n        </div>\n      )}\n\n      {/* Videos & Shorts */}\n      <h2 className=\"text-xl font-bold\">Videos</h2>\n      {loading ? (\n        <p className=\"text-gray-500\">Loading...</p>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {videos.map((video) => (\n            <div key={video.id.videoId} className=\"space-y-2\">\n              <iframe\n                src={`https://www.youtube.com/embed/${video.id.videoId}`}\n                title={video.snippet.title}\n                className=\"w-full h-40 rounded-lg\"\n                allowFullScreen\n              />\n              <p className=\"text-sm font-medium\">{video.snippet.title}</p>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Shorts Section */}\n      <h2 className=\"text-xl font-bold mt-6\">Shorts</h2>\n      {shorts.length > 0 ? (\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n          {shorts.map((short) => (\n            <div key={short.id.videoId} className=\"space-y-2\">\n              <iframe\n                src={`https://www.youtube.com/embed/${short.id.videoId}`}\n                title={short.snippet.title}\n                className=\"w-full h-40 rounded-lg\"\n                allowFullScreen\n              />\n              <p className=\"text-xs text-gray-600\">{short.snippet.title}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-gray-500\">No Shorts available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default YouTube;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}