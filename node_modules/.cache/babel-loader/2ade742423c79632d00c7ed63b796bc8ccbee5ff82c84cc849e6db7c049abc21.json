{"ast":null,"code":"var _jsxFileName = \"/Users/gaadintech/Downloads/ios-dev-portfolio/src/YouTube.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTube = () => {\n  _s();\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const API_KEY = \"YOUR_YOUTUBE_API_KEY\"; // Replace with your API key\n  const CHANNEL_ID = \"UCSqX6nd5ITl3b9oFGpDPA\"; // Your channel ID\n\n  // Fetch channel data (statistics, snippet)\n  useEffect(() => {\n    const fetchChannelData = async () => {\n      try {\n        const response = await axios.get(`https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics&id=${CHANNEL_ID}&key=${API_KEY}`);\n        setChannelData(response.data.items[0]);\n      } catch (error) {\n        console.error(\"Error fetching channel data:\", error);\n      }\n    };\n    fetchChannelData();\n  }, []);\n\n  // Fetch all videos (including shorts)\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        // Get the uploads playlist ID\n        const playlistResponse = await axios.get(`https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=${CHANNEL_ID}&key=${API_KEY}`);\n        const uploadsPlaylistId = playlistResponse.data.items[0].contentDetails.relatedPlaylists.uploads;\n\n        // Fetch all videos from the uploads playlist\n        let allVideos = [];\n        let nextPageToken = \"\";\n        do {\n          const videoResponse = await axios.get(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${uploadsPlaylistId}&maxResults=50&pageToken=${nextPageToken}&key=${API_KEY}`);\n          allVideos = [...allVideos, ...videoResponse.data.items];\n          nextPageToken = videoResponse.data.nextPageToken || \"\";\n        } while (nextPageToken);\n        setVideos(allVideos);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n        setLoading(false);\n      }\n    };\n    fetchVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"YouTube - @chiranjeevikumar1008\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), channelData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-6 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: channelData.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Subscribers: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.subscriberCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Total Videos: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.videoCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Total Views: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: channelData.statistics.viewCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-sm mt-2\",\n        children: channelData.snippet.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://youtube.com/@chiranjeevikumar1008\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-600 hover:underline mt-2 inline-block\",\n        children: \"Visit Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"Loading channel data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: videos.length > 0 ? videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aspect-w-16 aspect-h-9\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: `https://www.youtube.com/embed/${video.snippet.resourceId.videoId}`,\n            title: video.snippet.title,\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            className: \"w-full h-full rounded-lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm font-medium truncate\",\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600\",\n          children: [\"Published: \", new Date(video.snippet.publishedAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, video.snippet.resourceId.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No videos found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTube, \"DLFdOFbOvd+TLL7vsPcwzLwMH8c=\");\n_c = YouTube;\nexport default YouTube;\nvar _c;\n$RefreshReg$(_c, \"YouTube\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","YouTube","_s","channelData","setChannelData","videos","setVideos","loading","setLoading","API_KEY","CHANNEL_ID","fetchChannelData","response","get","data","items","error","console","fetchVideos","playlistResponse","uploadsPlaylistId","contentDetails","relatedPlaylists","uploads","allVideos","nextPageToken","videoResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","snippet","title","statistics","subscriberCount","videoCount","viewCount","description","href","target","rel","length","map","video","src","resourceId","videoId","allow","allowFullScreen","Date","publishedAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/gaadintech/Downloads/ios-dev-portfolio/src/YouTube.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst YouTube = () => {\n  const [channelData, setChannelData] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const API_KEY = \"YOUR_YOUTUBE_API_KEY\"; // Replace with your API key\n  const CHANNEL_ID = \"UCSqX6nd5ITl3b9oFGpDPA\"; // Your channel ID\n\n  // Fetch channel data (statistics, snippet)\n  useEffect(() => {\n    const fetchChannelData = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics&id=${CHANNEL_ID}&key=${API_KEY}`\n        );\n        setChannelData(response.data.items[0]);\n      } catch (error) {\n        console.error(\"Error fetching channel data:\", error);\n      }\n    };\n    fetchChannelData();\n  }, []);\n\n  // Fetch all videos (including shorts)\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        // Get the uploads playlist ID\n        const playlistResponse = await axios.get(\n          `https://www.googleapis.com/youtube/v3/channels?part=contentDetails&id=${CHANNEL_ID}&key=${API_KEY}`\n        );\n        const uploadsPlaylistId = playlistResponse.data.items[0].contentDetails.relatedPlaylists.uploads;\n\n        // Fetch all videos from the uploads playlist\n        let allVideos = [];\n        let nextPageToken = \"\";\n        do {\n          const videoResponse = await axios.get(\n            `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=${uploadsPlaylistId}&maxResults=50&pageToken=${nextPageToken}&key=${API_KEY}`\n          );\n          allVideos = [...allVideos, ...videoResponse.data.items];\n          nextPageToken = videoResponse.data.nextPageToken || \"\";\n        } while (nextPageToken);\n\n        setVideos(allVideos);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n        setLoading(false);\n      }\n    };\n    fetchVideos();\n  }, []);\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">YouTube - @chiranjeevikumar1008</h1>\n\n      {/* Channel Info */}\n      {channelData && (\n        <div className=\"bg-gray-100 p-6 rounded-lg shadow\">\n          <h2 className=\"text-2xl font-semibold\">{channelData.snippet.title}</h2>\n          <p className=\"text-gray-700\">Subscribers: <span className=\"font-bold\">{channelData.statistics.subscriberCount}</span></p>\n          <p className=\"text-gray-700\">Total Videos: <span className=\"font-bold\">{channelData.statistics.videoCount}</span></p>\n          <p className=\"text-gray-700\">Total Views: <span className=\"font-bold\">{channelData.statistics.viewCount}</span></p>\n          <p className=\"text-gray-600 text-sm mt-2\">{channelData.snippet.description}</p>\n          <a\n            href=\"https://youtube.com/@chiranjeevikumar1008\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-blue-600 hover:underline mt-2 inline-block\"\n          >\n            Visit Channel\n          </a>\n        </div>\n      )}\n\n      {/* Video List */}\n      {loading ? (\n        <p className=\"text-gray-500\">Loading channel data...</p>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {videos.length > 0 ? (\n            videos.map((video) => (\n              <div key={video.snippet.resourceId.videoId} className=\"space-y-2\">\n                <div className=\"aspect-w-16 aspect-h-9\">\n                  <iframe\n                    src={`https://www.youtube.com/embed/${video.snippet.resourceId.videoId}`}\n                    title={video.snippet.title}\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"w-full h-full rounded-lg\"\n                  />\n                </div>\n                <p className=\"text-sm font-medium truncate\">{video.snippet.title}</p>\n                <p className=\"text-xs text-gray-600\">\n                  Published: {new Date(video.snippet.publishedAt).toLocaleDateString()}\n                </p>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-gray-500\">No videos found.</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default YouTube;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}